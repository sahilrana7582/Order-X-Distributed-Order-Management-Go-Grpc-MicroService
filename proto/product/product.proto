syntax = "proto3";

package product;

option go_package = "github.com/sahilrana7582/orderX/pkg/generated/product;product";

// ---------------- Enums ---------------- //

enum ProductStatus {
  ACTIVE = 0;
  INACTIVE = 1;
  OUT_OF_STOCK = 2;
  DISCONTINUED = 3;
}

enum AvailabilityStatus {
  AVAILABLE = 0;
  BACKORDER = 1;
  PREORDER = 2;
}

// ---------------- Messages ---------------- //

message Product {
  string id = 1;
  string name = 2;
  string description = 3;
  string sku = 4;
  double price = 5;
  double discount_price = 6;
  double tax_percentage = 7;
  string currency = 8;

  ProductStatus status = 9;
  AvailabilityStatus availability = 10;

  int32 stock_quantity = 11;

//   repeated ProductImage images = 12;
//   repeated ProductVariant variants = 13;

  repeated string category_ids = 14;

  string created_at = 15;
  string updated_at = 16;

}

// message ProductImage {
//   string url = 1;
//   string alt_text = 2;
//   int32 position = 3;
// }

// message ProductVariant {
//   string id = 1;
//   string name = 2; // e.g., "Red - XL"
//   string sku = 3;
//   double price = 4;
//   int32 stock_quantity = 5;
// }



// ---------------- Create / Update ---------------- //

message CreateProductRequest {
  string name = 1;
  string description = 2;
  string sku = 3;
  double price = 4;
  double discount_price = 5;
  double tax_percentage = 6;
  string currency = 7;
  ProductStatus status = 8;
  AvailabilityStatus availability = 9;
  int32 stock_quantity = 10;

//   repeated ProductImage images = 11;
//   repeated ProductVariant variants = 12;
  repeated string category_ids = 13;
}

message CreateProductResponse {
  string id = 1;
  string message = 2;
}

// message UpdateProductRequest {
//   string id = 1;
//   optional string name = 2;
//   optional string description = 3;
//   optional string sku = 4;
//   optional double price = 5;
//   optional double discount_price = 6;
//   optional double tax_percentage = 7;
//   optional string currency = 8;
//   optional ProductStatus status = 9;
//   optional AvailabilityStatus availability = 10;
//   optional int32 stock_quantity = 11;

//   repeated ProductImage images = 12;
//   repeated ProductVariant variants = 13;
//   repeated string category_ids = 14;
//   optional SEO seo = 15;
// }

// message UpdateProductResponse {
//   string message = 1;
//   Product updated_product = 2;
// }

// ---------------- Get / Delete / List ---------------- //

// message GetProductByIdRequest {
//   string id = 1;
// }

// message GetProductByIdResponse {
//   Product product = 1;
// }

// message DeleteProductRequest {
//   string id = 1;
// }

// message DeleteProductResponse {
//   string message = 1;
// }

// message ListProductsRequest {
//   optional int32 page = 1;
//   optional int32 limit = 2;
//   optional string search = 3;
//   optional string sort_by = 4;
//   optional string order = 5; // "asc" | "desc"
//   optional string category_id = 6;
//   optional ProductStatus status = 7;
// }

// message ListProductsResponse {
//   repeated Product products = 1;
//   int32 total = 2;
//   int32 page = 3;
//   int32 limit = 4;
// }

// ---------------- Service ---------------- //

service ProductService {
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
//   rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse);
//   rpc GetProductById(GetProductByIdRequest) returns (GetProductByIdResponse);
//   rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse);
//   rpc ListProducts(ListProductsRequest) returns (ListProductsResponse);
}
