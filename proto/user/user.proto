syntax = "proto3";

package user;

option go_package = "github.com/your-org/your-repo/proto/userpb";

import "google/protobuf/timestamp.proto";

// ------------------------- Enums -------------------------

enum UserRole {
  USER_ROLE_UNSPECIFIED = 0;
  USER_ROLE_USER = 1;
  USER_ROLE_ADMIN = 2;
}

enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_ACTIVE = 1;
  USER_STATUS_INACTIVE = 2;
  USER_STATUS_BANNED = 3;
}

// ------------------------ Messages ------------------------

message User {
  string id = 1;
  string name = 2;
  string email = 3;
  UserRole role = 4;
  UserStatus status = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

// Used internally, not returned to clients
message InternalUser {
  string id = 1;
  string name = 2;
  string email = 3;
  string password = 4;
  UserRole role = 5;
  UserStatus status = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

// ------------------------ Requests ------------------------

message RegisterUserRequest {
  string name = 1;
  string email = 2;
  string password = 3;
}

message LoginUserRequest {
  string email = 1;
  string password = 2;
}

message GetUserByIDRequest {
  string id = 1;
}

message UpdateUserRequest {
  string id = 1;
  string name = 2;
  string email = 3;
  UserRole role = 4;
  UserStatus status = 5;
}

message DeleteUserRequest {
  string id = 1;
}

message ListUsersRequest {
  int32 page = 1;
  int32 limit = 2;
}

// ------------------------ Responses ------------------------

message RegisterUserResponse {
  string id = 1;
  string message = 2;
}

message LoginUserResponse {
  string token = 1;
  User user = 2;
}

message GetUserByIDResponse {
  User user = 1;
}

message UpdateUserResponse {
  User user = 1;
}

message DeleteUserResponse {
  string message = 1;
}

message ListUsersResponse {
  repeated User users = 1;
  int32 total = 2;
}

// ------------------------ Service ------------------------

service UserService {
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse);
  rpc GetUserByID(GetUserByIDRequest) returns (GetUserByIDResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
}
